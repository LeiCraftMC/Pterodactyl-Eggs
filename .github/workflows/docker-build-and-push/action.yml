name: Docker Build and Push
description: "Build and Push Docker Image"
inputs:
  registry:
    description: "Docker Registry"
    required: false
    default: "ghcr.io"
  image-name:
    description: "Docker Image Name"
    required: true
  image-tag:
    description: "Docker Image Tag Prefix"
    required: true
  context:
    description: "Docker Build Context"
    required: true
  username:
    description: "Docker Hub Username"
    required: true
  gh-token:
    description: "GitHub Token"
    required: true

runs:
  using: "composite"
  steps:
    - name: Install cosign
      if: github.event_name != 'pull_request'
      uses: sigstore/cosign-installer@59acb6260d9c0ba8f4a2f9d9b48431a222b68e20 #v3.5.0
      with:
        cosign-release: 'v2.2.4'

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@f95db51fddba0c2d1ec667646a06c2ce06100226 # v3.0.0

    - name: Log into registry ${{ inputs.registry }}
      if: github.event_name != 'pull_request'
      uses: docker/login-action@343f7c4344506bcbf9b4de18042ae17996df046d # v3.0.0
      with:
        registry: ${{ inputs.registry }}
        username: ${{ inputs.username }}
        password: ${{ inputs.gh-token }}

    - name: Extract Docker metadata
      id: meta
      uses: docker/metadata-action@96383f45573cb7f253c731d3b3ab81c87ef81934 # v5.0.0
      with:
        images: ${{ inputs.registry }}/${{ inputs.image-name }}

    - name: Build and push Docker image
      id: build-and-push
      uses: docker/build-push-action@0565240e2d4ab88bba5387d719585280857ece09 # v5.0.0
      with:
        context: ${{ inputs.context }}
        push: ${{ github.event_name != 'pull_request' }}
        tags: ${{ inputs.registry }}/${{ inputs.image-name }}:${{ inputs.image-tag }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Sign the published Docker image
      if: ${{ github.event_name != 'pull_request' }}
      shell: bash
      env:
        # https://docs.github.com/en/actions/security-guides/security-hardening-for-github-actions#using-an-intermediate-environment-variable
        TAGS: ${{ inputs.registry }}/${{ inputs.image-name }}:${{ inputs.image-tag }}
        DIGEST: ${{ steps.build-and-push.outputs.digest }}
      # This step uses the identity token to provision an ephemeral certificate
      # against the sigstore community Fulcio instance.
      run: echo "${TAGS}" | xargs -I {} cosign sign --yes {}@${DIGEST}

